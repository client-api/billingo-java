/*
 * Billingo API v3
 * This is a Billingo API v3 documentation. Our API based on REST software architectural style. API has resource-oriented URLs, accepts JSON-encoded request bodies and returns JSON-encoded responses. To use this API you have to generate a new API key on our [site](https://app.billingo.hu/api-key). After that, you can test your API key on this page.
 *
 * The version of the OpenAPI document: 3.0.14
 * Contact: hello@billingo.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.clientapi.billingo.model;

import java.util.Objects;
import com.clientapi.billingo.model.DocumentExportFilterExtra;
import com.clientapi.billingo.model.DocumentExportOtherOptions;
import com.clientapi.billingo.model.DocumentExportQueryType;
import com.clientapi.billingo.model.DocumentExportSortBy;
import com.clientapi.billingo.model.DocumentExportType;
import com.clientapi.billingo.model.PaymentMethod;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.clientapi.billingo.invoker.JSON;

/**
 * CreateDocumentExport
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-10-15T09:59:06.459642900+02:00[Europe/Budapest]")
public class CreateDocumentExport {
  public static final String SERIALIZED_NAME_QUERY_TYPE = "query_type";
  @SerializedName(SERIALIZED_NAME_QUERY_TYPE)
  private DocumentExportQueryType queryType;

  public static final String SERIALIZED_NAME_START_DATE = "start_date";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private LocalDate startDate;

  public static final String SERIALIZED_NAME_END_DATE = "end_date";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private LocalDate endDate;

  public static final String SERIALIZED_NAME_DOCUMENT_BLOCK_ID = "document_block_id";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_BLOCK_ID)
  private Integer documentBlockId;

  public static final String SERIALIZED_NAME_EXPORT_TYPE = "export_type";
  @SerializedName(SERIALIZED_NAME_EXPORT_TYPE)
  private DocumentExportType exportType;

  public static final String SERIALIZED_NAME_NUMBER_START_YEAR = "number_start_year";
  @SerializedName(SERIALIZED_NAME_NUMBER_START_YEAR)
  private Integer numberStartYear;

  public static final String SERIALIZED_NAME_NUMBER_START_SEQUENCE = "number_start_sequence";
  @SerializedName(SERIALIZED_NAME_NUMBER_START_SEQUENCE)
  private Integer numberStartSequence;

  public static final String SERIALIZED_NAME_NUMBER_END_YEAR = "number_end_year";
  @SerializedName(SERIALIZED_NAME_NUMBER_END_YEAR)
  private Integer numberEndYear;

  public static final String SERIALIZED_NAME_NUMBER_END_SEQUENCE = "number_end_sequence";
  @SerializedName(SERIALIZED_NAME_NUMBER_END_SEQUENCE)
  private Integer numberEndSequence;

  public static final String SERIALIZED_NAME_PAYMENT_METHOD = "payment_method";
  @SerializedName(SERIALIZED_NAME_PAYMENT_METHOD)
  private PaymentMethod paymentMethod;

  public static final String SERIALIZED_NAME_SORT_BY = "sort_by";
  @SerializedName(SERIALIZED_NAME_SORT_BY)
  private DocumentExportSortBy sortBy;

  public static final String SERIALIZED_NAME_OTHER_OPTIONS = "other_options";
  @SerializedName(SERIALIZED_NAME_OTHER_OPTIONS)
  private DocumentExportOtherOptions otherOptions;

  public static final String SERIALIZED_NAME_FILTER_EXTRA = "filter_extra";
  @SerializedName(SERIALIZED_NAME_FILTER_EXTRA)
  private DocumentExportFilterExtra filterExtra;

  public CreateDocumentExport() {
  }

  public CreateDocumentExport queryType(DocumentExportQueryType queryType) {
    
    this.queryType = queryType;
    return this;
  }

   /**
   * Get queryType
   * @return queryType
  **/
  @javax.annotation.Nonnull
  public DocumentExportQueryType getQueryType() {
    return queryType;
  }


  public void setQueryType(DocumentExportQueryType queryType) {
    this.queryType = queryType;
  }


  public CreateDocumentExport startDate(LocalDate startDate) {
    
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @javax.annotation.Nonnull
  public LocalDate getStartDate() {
    return startDate;
  }


  public void setStartDate(LocalDate startDate) {
    this.startDate = startDate;
  }


  public CreateDocumentExport endDate(LocalDate endDate) {
    
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @javax.annotation.Nonnull
  public LocalDate getEndDate() {
    return endDate;
  }


  public void setEndDate(LocalDate endDate) {
    this.endDate = endDate;
  }


  public CreateDocumentExport documentBlockId(Integer documentBlockId) {
    
    this.documentBlockId = documentBlockId;
    return this;
  }

   /**
   * Get documentBlockId
   * @return documentBlockId
  **/
  @javax.annotation.Nullable
  public Integer getDocumentBlockId() {
    return documentBlockId;
  }


  public void setDocumentBlockId(Integer documentBlockId) {
    this.documentBlockId = documentBlockId;
  }


  public CreateDocumentExport exportType(DocumentExportType exportType) {
    
    this.exportType = exportType;
    return this;
  }

   /**
   * Get exportType
   * @return exportType
  **/
  @javax.annotation.Nonnull
  public DocumentExportType getExportType() {
    return exportType;
  }


  public void setExportType(DocumentExportType exportType) {
    this.exportType = exportType;
  }


  public CreateDocumentExport numberStartYear(Integer numberStartYear) {
    
    this.numberStartYear = numberStartYear;
    return this;
  }

   /**
   * Get numberStartYear
   * @return numberStartYear
  **/
  @javax.annotation.Nullable
  public Integer getNumberStartYear() {
    return numberStartYear;
  }


  public void setNumberStartYear(Integer numberStartYear) {
    this.numberStartYear = numberStartYear;
  }


  public CreateDocumentExport numberStartSequence(Integer numberStartSequence) {
    
    this.numberStartSequence = numberStartSequence;
    return this;
  }

   /**
   * Get numberStartSequence
   * @return numberStartSequence
  **/
  @javax.annotation.Nullable
  public Integer getNumberStartSequence() {
    return numberStartSequence;
  }


  public void setNumberStartSequence(Integer numberStartSequence) {
    this.numberStartSequence = numberStartSequence;
  }


  public CreateDocumentExport numberEndYear(Integer numberEndYear) {
    
    this.numberEndYear = numberEndYear;
    return this;
  }

   /**
   * Get numberEndYear
   * @return numberEndYear
  **/
  @javax.annotation.Nullable
  public Integer getNumberEndYear() {
    return numberEndYear;
  }


  public void setNumberEndYear(Integer numberEndYear) {
    this.numberEndYear = numberEndYear;
  }


  public CreateDocumentExport numberEndSequence(Integer numberEndSequence) {
    
    this.numberEndSequence = numberEndSequence;
    return this;
  }

   /**
   * Get numberEndSequence
   * @return numberEndSequence
  **/
  @javax.annotation.Nullable
  public Integer getNumberEndSequence() {
    return numberEndSequence;
  }


  public void setNumberEndSequence(Integer numberEndSequence) {
    this.numberEndSequence = numberEndSequence;
  }


  public CreateDocumentExport paymentMethod(PaymentMethod paymentMethod) {
    
    this.paymentMethod = paymentMethod;
    return this;
  }

   /**
   * Get paymentMethod
   * @return paymentMethod
  **/
  @javax.annotation.Nullable
  public PaymentMethod getPaymentMethod() {
    return paymentMethod;
  }


  public void setPaymentMethod(PaymentMethod paymentMethod) {
    this.paymentMethod = paymentMethod;
  }


  public CreateDocumentExport sortBy(DocumentExportSortBy sortBy) {
    
    this.sortBy = sortBy;
    return this;
  }

   /**
   * Get sortBy
   * @return sortBy
  **/
  @javax.annotation.Nullable
  public DocumentExportSortBy getSortBy() {
    return sortBy;
  }


  public void setSortBy(DocumentExportSortBy sortBy) {
    this.sortBy = sortBy;
  }


  public CreateDocumentExport otherOptions(DocumentExportOtherOptions otherOptions) {
    
    this.otherOptions = otherOptions;
    return this;
  }

   /**
   * Get otherOptions
   * @return otherOptions
  **/
  @javax.annotation.Nullable
  public DocumentExportOtherOptions getOtherOptions() {
    return otherOptions;
  }


  public void setOtherOptions(DocumentExportOtherOptions otherOptions) {
    this.otherOptions = otherOptions;
  }


  public CreateDocumentExport filterExtra(DocumentExportFilterExtra filterExtra) {
    
    this.filterExtra = filterExtra;
    return this;
  }

   /**
   * Get filterExtra
   * @return filterExtra
  **/
  @javax.annotation.Nullable
  public DocumentExportFilterExtra getFilterExtra() {
    return filterExtra;
  }


  public void setFilterExtra(DocumentExportFilterExtra filterExtra) {
    this.filterExtra = filterExtra;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateDocumentExport createDocumentExport = (CreateDocumentExport) o;
    return Objects.equals(this.queryType, createDocumentExport.queryType) &&
        Objects.equals(this.startDate, createDocumentExport.startDate) &&
        Objects.equals(this.endDate, createDocumentExport.endDate) &&
        Objects.equals(this.documentBlockId, createDocumentExport.documentBlockId) &&
        Objects.equals(this.exportType, createDocumentExport.exportType) &&
        Objects.equals(this.numberStartYear, createDocumentExport.numberStartYear) &&
        Objects.equals(this.numberStartSequence, createDocumentExport.numberStartSequence) &&
        Objects.equals(this.numberEndYear, createDocumentExport.numberEndYear) &&
        Objects.equals(this.numberEndSequence, createDocumentExport.numberEndSequence) &&
        Objects.equals(this.paymentMethod, createDocumentExport.paymentMethod) &&
        Objects.equals(this.sortBy, createDocumentExport.sortBy) &&
        Objects.equals(this.otherOptions, createDocumentExport.otherOptions) &&
        Objects.equals(this.filterExtra, createDocumentExport.filterExtra);
  }

  @Override
  public int hashCode() {
    return Objects.hash(queryType, startDate, endDate, documentBlockId, exportType, numberStartYear, numberStartSequence, numberEndYear, numberEndSequence, paymentMethod, sortBy, otherOptions, filterExtra);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateDocumentExport {\n");
    sb.append("    queryType: ").append(toIndentedString(queryType)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    documentBlockId: ").append(toIndentedString(documentBlockId)).append("\n");
    sb.append("    exportType: ").append(toIndentedString(exportType)).append("\n");
    sb.append("    numberStartYear: ").append(toIndentedString(numberStartYear)).append("\n");
    sb.append("    numberStartSequence: ").append(toIndentedString(numberStartSequence)).append("\n");
    sb.append("    numberEndYear: ").append(toIndentedString(numberEndYear)).append("\n");
    sb.append("    numberEndSequence: ").append(toIndentedString(numberEndSequence)).append("\n");
    sb.append("    paymentMethod: ").append(toIndentedString(paymentMethod)).append("\n");
    sb.append("    sortBy: ").append(toIndentedString(sortBy)).append("\n");
    sb.append("    otherOptions: ").append(toIndentedString(otherOptions)).append("\n");
    sb.append("    filterExtra: ").append(toIndentedString(filterExtra)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("query_type");
    openapiFields.add("start_date");
    openapiFields.add("end_date");
    openapiFields.add("document_block_id");
    openapiFields.add("export_type");
    openapiFields.add("number_start_year");
    openapiFields.add("number_start_sequence");
    openapiFields.add("number_end_year");
    openapiFields.add("number_end_sequence");
    openapiFields.add("payment_method");
    openapiFields.add("sort_by");
    openapiFields.add("other_options");
    openapiFields.add("filter_extra");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("query_type");
    openapiRequiredFields.add("start_date");
    openapiRequiredFields.add("end_date");
    openapiRequiredFields.add("export_type");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to CreateDocumentExport
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateDocumentExport.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateDocumentExport is not found in the empty JSON string", CreateDocumentExport.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateDocumentExport.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateDocumentExport` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateDocumentExport.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `filter_extra`
      if (jsonObj.get("filter_extra") != null && !jsonObj.get("filter_extra").isJsonNull()) {
        DocumentExportFilterExtra.validateJsonElement(jsonObj.get("filter_extra"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateDocumentExport.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateDocumentExport' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateDocumentExport> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateDocumentExport.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateDocumentExport>() {
           @Override
           public void write(JsonWriter out, CreateDocumentExport value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateDocumentExport read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CreateDocumentExport given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CreateDocumentExport
  * @throws IOException if the JSON string is invalid with respect to CreateDocumentExport
  */
  public static CreateDocumentExport fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateDocumentExport.class);
  }

 /**
  * Convert an instance of CreateDocumentExport to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

